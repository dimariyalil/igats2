name: Create Project Structure

on:
  workflow_dispatch:

jobs:
  create-structure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Directory Structure
        run: |
          mkdir -p data/structured-data
          mkdir -p data/seo-data
          mkdir -p wordpress-implementation/phase-1-foundation
          mkdir -p wordpress-implementation/phase-2-structure
          mkdir -p wordpress-implementation/phase-3-import
          mkdir -p wordpress-implementation/phase-4-design
          mkdir -p interactive-tools/organization-explorer/org-chart-widget
          mkdir -p interactive-tools/organization-explorer/department-visualizer
          mkdir -p interactive-tools/organization-explorer/position-search
          mkdir -p interactive-tools/career-navigator/career-paths-visualizer
          mkdir -p interactive-tools/career-navigator/skills-matrix-interactive
          mkdir -p interactive-tools/career-navigator/salary-calculator
          mkdir -p interactive-tools/career-navigator/career-progression-timeline
          mkdir -p interactive-tools/business-builder/business-model-configurator
          mkdir -p interactive-tools/business-builder/team-size-calculator
          mkdir -p interactive-tools/business-builder/timeline-generator
          mkdir -p interactive-tools/business-builder/roi-calculator
          mkdir -p interactive-tools/business-builder/pdf-report-generator
          mkdir -p interactive-tools/industry-insights/company-comparison-tool
          mkdir -p interactive-tools/industry-insights/market-trends-dashboard
          mkdir -p interactive-tools/industry-insights/regulatory-requirements-map
          mkdir -p ai-content-generation/chatgpt-prompts
          mkdir -p ai-content-generation/jetpack-ai-templates
          mkdir -p ai-content-generation/bulk-generation-scripts
          mkdir -p seo-optimization/rankmath-configs/schema-templates
          mkdir -p seo-optimization/content-strategy
          mkdir -p seo-optimization/technical-seo
          mkdir -p n8n-automation/workflows
          mkdir -p n8n-automation/api-integrations
          mkdir -p n8n-automation/automation-calendar
          mkdir -p monetization/freemium-setup
          mkdir -p monetization/b2b-api
          mkdir -p monetization/recruitment-services
          mkdir -p documentation
          mkdir -p launch-materials/marketing
          mkdir -p launch-materials/analytics
      
      - name: Create README files
        run: |
          echo "# iGaming Organization Hub" > README.md
          echo "## Data Directory" > data/README.md
          echo "## WordPress Implementation" > wordpress-implementation/README.md
          echo "## Interactive Tools" > interactive-tools/README.md
          echo "## AI Content Generation" > ai-content-generation/README.md
          echo "## SEO Optimization" > seo-optimization/README.md
          echo "## n8n Automation" > n8n-automation/README.md
          echo "## Monetization" > monetization/README.md
          echo "## Documentation" > documentation/README.md
          echo "## Launch Materials" > launch-materials/README.md
      
      - name: Create Quick Start Guide
        run: |
          cat << 'EOF' > documentation/QUICK-START.md
          # 7-дневный план запуска iGaming Organization Hub

          ## День 1: Установка и базовая настройка
          ✅ Установка WordPress на хостинг
          ✅ Установка обязательных плагинов:
             - Custom Post Type UI
             - Advanced Custom Fields Pro
             - WP All Import Pro
             - Elementor Pro
             - RankMath Pro
          ✅ Импорт базовой структуры из `/wordpress-implementation/phase-2-structure/`

          ## День 2: Импорт данных
          ✅ Подготовка CSV из JSON файлов (скрипт в `/data/preparation-scripts/`)
          ✅ Тестовый импорт 100 позиций
          ✅ Проверка и корректировка маппинга
          ✅ Полный импорт 4,127 позиций

          ## День 3: AI-генерация контента
          ✅ Настройка Jetpack AI
          ✅ Импорт промптов из `/ai-content-generation/chatgpt-prompts/`
          ✅ Bulk-генерация описаний для позиций
          ✅ Генерация meta-данных через RankMath

          ## День 4: Установка интерактивных инструментов
          ✅ Organization Explorer:
             - Копировать код из `/interactive-tools/organization-explorer/`
             - Вставить через Elementor HTML widget
             - Настроить shortcode [igaming_org_chart]
          ✅ Career Navigator:
             - Установить компоненты визуализации
             - Настроить REST API endpoints
          ✅ Базовый Business Builder:
             - Установить калькулятор команды
             - Настроить форму конфигуратора

          ## День 5: SEO-оптимизация
          ✅ Импорт настроек RankMath из `/seo-optimization/rankmath-configs/`
          ✅ Настройка Schema markup для всех CPT
          ✅ Создание XML sitemap с приоритетами
          ✅ Настройка внутренней перелинковки

          ## День 6: Автоматизация n8n
          ✅ Установка n8n (локально или облако)
          ✅ Импорт workflow из `/n8n-automation/workflows/`
          ✅ Настройка WordPress REST API
          ✅ Запуск автоматического обновления контента

          ## День 7: Тестирование и запуск
          ✅ Проверка всех страниц и функций
          ✅ Тестирование скорости загрузки
          ✅ Отправка sitemap в Google Search Console
          ✅ Настройка Google Analytics
          ✅ Soft launch для тестовой группы
          EOF

      - name: Create Position JSON Example
        run: |
          mkdir -p data/structured-data/examples
          cat << 'EOF' > data/structured-data/examples/positions-sample.json
          [
            {
              "id": "001",
              "title": "Chief Executive Officer",
              "slug": "chief-executive-officer",
              "department": "Executive Leadership",
              "level": "C-Level",
              "reports_to": "Board of Directors",
              "short_description": "The CEO is the highest-ranking executive in an iGaming company, responsible for making major corporate decisions, managing overall operations and resources, and acting as the main point of communication between the board of directors and corporate operations.",
              "full_description": "The Chief Executive Officer in the iGaming industry is the visionary leader responsible for guiding the company's strategic direction, ensuring regulatory compliance, and driving growth in a highly competitive and rapidly evolving market. This executive oversees all departments including technology, operations, marketing, product, and compliance, balancing innovation with the strict regulatory requirements that characterize the online gambling industry. The CEO must navigate complex international licensing frameworks, maintain relationships with regulators, and understand both the technical and commercial aspects of the iGaming business.",
              "responsibilities": [
                "Define and implement the company's vision, mission, and strategic objectives",
                "Lead the executive team and ensure alignment across all departments",
                "Secure necessary funding and manage relationships with investors",
                "Navigate complex regulatory environments across multiple jurisdictions",
                "Oversee market expansion and licensing in new territories",
                "Build strategic partnerships with game providers, payment processors, and affiliates",
                "Monitor industry trends and adjust company strategy accordingly",
                "Ensure regulatory compliance and responsible gambling initiatives",
                "Report to the board of directors on company performance and strategy",
                "Represent the company at industry events and with regulatory bodies"
              ],
              "requirements": {
                "technical_skills": [
                  "Understanding of iGaming platforms and architecture",
                  "Knowledge of betting and gaming products",
                  "Familiarity with regulatory compliance systems",
                  "Data analytics and business intelligence",
                  "Risk management frameworks",
                  "Financial modeling and forecasting"
                ],
                "soft_skills": [
                  "Strategic vision and leadership",
                  "Decision-making under uncertainty",
                  "Cross-cultural communication",
                  "Negotiation and stakeholder management",
                  "Crisis management",
                  "Public speaking and representation"
                ],
                "education_experience": {
                  "education": "Bachelor's degree required, MBA or similar advanced degree preferred",
                  "experience": "10+ years in executive management, with at least 5 years in iGaming or related industries",
                  "specific": "Experience with gambling licenses, international expansion, and M&A activity"
                }
              },
              "nice_to_have": [
                "Previous experience taking a company public or through significant funding rounds",
                "Multi-jurisdiction licensing experience",
                "Network in the gambling industry",
                "Experience with both B2C and B2B operations"
              ],
              "career_path": {
                "previous_roles": [
                  "COO of an iGaming company",
                  "Managing Director of a business unit",
                  "Senior VP of Operations",
                  "Head of a major department (Product, Technology)"
                ],
                "next_steps": [
                  "CEO of a larger iGaming group",
                  "Board member in multiple companies",
                  "Venture capital or private equity partner specializing in iGaming"
                ],
                "timeline": "Typically 5-7 years in position before moving to larger company or board positions"
              },
              "salary_range": {
                "US": "$400,000 - $1,200,000",
                "UK": "£300,000 - £800,000",
                "Malta": "€250,000 - €700,000",
                "Eastern_Europe": "€200,000 - €500,000",
                "APAC": "$300,000 - $900,000"
              },
              "day_in_life": "A typical day for a CEO in the iGaming industry starts with reviewing key performance indicators and overnight results. Morning hours might include executive team meetings, strategic planning sessions, or calls with investors. Midday often involves external meetings with partners, regulators, or potential acquisition targets. Afternoons may be dedicated to product reviews, compliance updates, or financial planning. Throughout the day, the CEO must remain available for critical decisions regarding market opportunities, competitive threats, or regulatory challenges. Evening commitments often include industry networking events, board dinners, or preparation for the next day's strategic initiatives.",
              "industry_outlook": {
                "growth_prospects": "Strong demand as more regions regulate online gambling",
                "technology_impact": "AI, blockchain, and VR creating new opportunities and challenges",
                "future_skills": "Increasing emphasis on responsible gambling, data protection, and emerging technologies"
              },
              "related_positions": [
                "Chief Operating Officer",
                "Chief Commercial Officer",
                "Chief Technology Officer",
                "Managing Director",
                "President",
                "Chairman of the Board"
              ],
              "meta": {
                "title": "Chief Executive Officer (CEO) in iGaming | Roles & Responsibilities",
                "description": "Comprehensive guide to the CEO role in iGaming companies. Learn about responsibilities, skills required, career path and salary expectations in the online gambling industry.",
                "keywords": [
                  "iGaming CEO",
                  "gambling executive",
                  "online casino leadership",
                  "betting company CEO",
                  "gaming executive salary"
                ]
              }
            }
          ]
          EOF

      - name: Create CPT UI Configuration
        run: |
          mkdir -p wordpress-implementation/phase-2-structure
          cat << 'EOF' > wordpress-implementation/phase-2-structure/cpt-positions.json
          {
            "positions": {
              "name": "positions",
              "label": "Positions",
              "singular_label": "Position",
              "description": "iGaming industry positions and roles",
              "public": true,
              "publicly_queryable": true,
              "show_ui": true,
              "show_in_nav_menus": true,
              "delete_with_user": false,
              "show_in_rest": true,
              "rest_base": "positions",
              "rest_controller_class": "WP_REST_Posts_Controller",
              "has_archive": true,
              "has_archive_string": "positions",
              "exclude_from_search": false,
              "capability_type": "post",
              "hierarchical": false,
              "rewrite": {
                "slug": "positions",
                "with_front": false
              },
              "query_var": true,
              "menu_position": 5,
              "menu_icon": "dashicons-id",
              "supports": [
                "title",
                "editor",
                "thumbnail",
                "excerpt",
                "revisions",
                "author",
                "custom-fields"
              ],
              "taxonomies": [
                "department",
                "level",
                "skills"
              ]
            }
          }
          EOF

      - name: Create ACF Fields
        run: |
          cat << 'EOF' > wordpress-implementation/phase-2-structure/acf-fields-complete.json
          {
            "key": "group_positions",
            "title": "Position Details",
            "fields": [
              {
                "key": "field_department",
                "label": "Department",
                "name": "department",
                "type": "taxonomy",
                "instructions": "Select the department this position belongs to",
                "required": 1,
                "taxonomy": "department",
                "field_type": "select",
                "allow_null": 0,
                "return_format": "object"
              },
              {
                "key": "field_level",
                "label": "Level",
                "name": "level",
                "type": "taxonomy",
                "instructions": "Select the organizational level",
                "required": 1,
                "taxonomy": "level",
                "field_type": "select",
                "allow_null": 0,
                "return_format": "object"
              },
              {
                "key": "field_reports_to",
                "label": "Reports To",
                "name": "reports_to",
                "type": "post_object",
                "instructions": "Select position this role reports to",
                "required": 0,
                "post_type": ["positions"],
                "return_format": "object"
              },
              {
                "key": "field_short_description",
                "label": "Short Description",
                "name": "short_description",
                "type": "textarea",
                "instructions": "A brief 1-2 sentence description of the position",
                "required": 1
              },
              {
                "key": "field_responsibilities",
                "label": "Key Responsibilities",
                "name": "responsibilities",
                "type": "repeater",
                "instructions": "Add the key responsibilities for this role",
                "required": 1,
                "min": 5,
                "layout": "table",
                "button_label": "Add Responsibility",
                "sub_fields": [
                  {
                    "key": "field_responsibility",
                    "label": "Responsibility",
                    "name": "responsibility",
                    "type": "text"
                  }
                ]
              },
              {
                "key": "field_salary_ranges",
                "label": "Salary Ranges",
                "name": "salary_ranges",
                "type": "group",
                "instructions": "Enter salary ranges for different regions",
                "required": 1,
                "layout": "block",
                "sub_fields": [
                  {
                    "key": "field_salary_us",
                    "label": "United States",
                    "name": "us",
                    "type": "text"
                  },
                  {
                    "key": "field_salary_uk",
                    "label": "United Kingdom",
                    "name": "uk",
                    "type": "text"
                  },
                  {
                    "key": "field_salary_malta",
                    "label": "Malta",
                    "name": "malta",
                    "type": "text"
                  },
                  {
                    "key": "field_salary_eastern_europe",
                    "label": "Eastern Europe",
                    "name": "eastern_europe",
                    "type": "text"
                  },
                  {
                    "key": "field_salary_apac",
                    "label": "APAC",
                    "name": "apac",
                    "type": "text"
                  }
                ]
              },
              {
                "key": "field_skills_required",
                "label": "Skills Required",
                "name": "skills_required",
                "type": "taxonomy",
                "instructions": "Select required skills for this position",
                "required": 1,
                "taxonomy": "skills",
                "field_type": "multi_select",
                "allow_null": 0,
                "return_format": "object"
              }
            ],
            "location": [
              [
                {
                  "param": "post_type",
                  "operator": "==",
                  "value": "positions"
                }
              ]
            ]
          }
          EOF

      - name: Create AI Prompt Example
        run: |
          mkdir -p ai-content-generation/chatgpt-prompts
          cat << 'EOF' > ai-content-generation/chatgpt-prompts/position-description-mega-prompt.txt
          You are an iGaming industry expert creating comprehensive position descriptions.

          Position: {position_title}
          Department: {department}
          Level: {level}
          Company Size: {company_size}

          Create a detailed page following this EXACT structure:

          1. POSITION OVERVIEW (200-250 words)
          - Start with: "The {position_title} in the iGaming industry..."
          - Include primary responsibilities
          - Mention typical company types hiring this role
          - Include main keyword 2-3 times naturally

          2. KEY RESPONSIBILITIES (10-15 bullet points)
          - Start each with an action verb
          - Be specific to iGaming context
          - Include metrics where relevant

          3. REQUIRED SKILLS & QUALIFICATIONS
          Technical Skills:
          - List 5-8 specific technical competencies
          - Include software/platforms specific to iGaming

          Soft Skills:
          - List 5-7 essential soft skills
          - Relate to iGaming environment

          Education & Experience:
          - Typical education level
          - Years of experience needed
          - Specific iGaming experience required

          4. NICE-TO-HAVE QUALIFICATIONS
          - Additional certifications
          - Language requirements
          - Regulatory knowledge

          5. CAREER PATH & PROGRESSION
          Previous Roles:
          - 3-5 positions that lead to this role

          Next Career Steps:
          - 3-5 positions this role can advance to

          Typical Timeline:
          - Years to advance to next level

          6. SALARY EXPECTATIONS
          Format each as: "Region: $X,000 - $Y,000 per year"
          - United States: 
          - United Kingdom: 
          - Malta: 
          - Eastern Europe: 
          - Asia-Pacific: 

          Add note about factors affecting salary.

          7. DAY IN THE LIFE
          Write 3-4 paragraphs describing typical daily activities

          8. INDUSTRY OUTLOOK
          - Growth prospects for this role
          - Impact of technology/regulation
          - Future skill requirements

          9. FREQUENTLY ASKED QUESTIONS
          Create 5 relevant questions and detailed answers

          10. RELATED POSITIONS
          List 5-7 related roles with brief descriptions

          SEO REQUIREMENTS:
          - Primary keyword: "{position_title} iGaming"
          - Use keyword in first 100 words
          - Include in 2-3 H2 headers
          - Natural keyword density 1-2%
          - Write at 8th grade reading level
          - Total length: 1,800-2,200 words
          EOF

      - name: Create Organization Explorer Example
        run: |
          mkdir -p interactive-tools/organization-explorer/org-chart-widget
          cat << 'EOF' > interactive-tools/organization-explorer/org-chart-widget/orgchart.html
          <!-- Organization Explorer Widget -->
          <div id="igaming-org-chart-container" class="igaming-explorer">
            <div class="controls">
              <div class="filter-group">
                <label for="company-size">Company Size:</label>
                <select id="company-size">
                  <option value="startup">Startup (10-50)</option>
                  <option value="growth">Growth (50-200)</option>
                  <option value="enterprise" selected>Enterprise (200+)</option>
                </select>
              </div>
              <div class="filter-group">
                <label for="department-filter">Department:</label>
                <select id="department-filter">
                  <option value="all">All Departments</option>
                  <option value="executive">Executive</option>
                  <option value="technology">Technology</option>
                  <option value="product">Product</option>
                  <option value="marketing">Marketing</option>
                  <option value="operations">Operations</option>
                  <option value="finance">Finance</option>
                  <option value="compliance">Compliance & Legal</option>
                  <option value="hr">Human Resources</option>
                </select>
              </div>
            </div>
            <div id="org-chart"></div>
            <div class="position-details" id="position-details">
              <h3>Position Details</h3>
              <p>Select a position to view details</p>
            </div>
          </div>

          <style>
            .igaming-explorer {
              display: flex;
              flex-direction: column;
              width: 100%;
              max-width: 1200px;
              margin: 0 auto;
              font-family: Arial, sans-serif;
            }
            
            .controls {
              display: flex;
              gap: 20px;
              margin-bottom: 20px;
            }
            
            .filter-group {
              display: flex;
              flex-direction: column;
              min-width: 200px;
            }
            
            #org-chart {
              min-height: 600px;
              border: 1px solid #ddd;
              border-radius: 4px;
            }
            
            .position-details {
              margin-top: 20px;
              padding: 15px;
              border: 1px solid #ddd;
              border-radius: 4px;
              background: #f9f9f9;
            }
          </style>

          <script>
            document.addEventListener('DOMContentLoaded', function() {
              // This is a simplified version - the full version would use API data
              const orgData = {
                nodes: [
                  { id: 1, name: "CEO", title: "Chief Executive Officer", department: "executive", level: "C-Level" },
                  { id: 2, pid: 1, name: "COO", title: "Chief Operating Officer", department: "executive", level: "C-Level" },
                  { id: 3, pid: 1, name: "CTO", title: "Chief Technology Officer", department: "executive", level: "C-Level" },
                  { id: 4, pid: 1, name: "CFO", title: "Chief Financial Officer", department: "executive", level: "C-Level" },
                  { id: 5, pid: 1, name: "CMO", title: "Chief Marketing Officer", department: "executive", level: "C-Level" },
                  { id: 6, pid: 1, name: "CPO", title: "Chief Product Officer", department: "executive", level: "C-Level" },
                  { id: 7, pid: 3, name: "VP Engineering", title: "VP Engineering", department: "technology", level: "VP" },
                  { id: 8, pid: 6, name: "VP Product", title: "VP Product", department: "product", level: "VP" },
                  { id: 9, pid: 5, name: "VP Marketing", title: "VP Marketing", department: "marketing", level: "VP" },
                  // Add more nodes as needed
                ]
              };
              
              // Initialize chart (this would use OrgChart.js or similar in the real implementation)
              initOrgChart(orgData);
              
              // Add event listeners to filters
              document.getElementById('company-size').addEventListener('change', updateChart);
              document.getElementById('department-filter').addEventListener('change', updateChart);
              
              function initOrgChart(data) {
                // In real implementation, this would initialize the chart library
                const container = document.getElementById('org-chart');
                container.innerHTML = '<p>Chart would render here with ' + data.nodes.length + ' positions.</p>';
                
                // Simulate nodes with divs for this example
                data.nodes.forEach(node => {
                  if (node.department === document.getElementById('department-filter').value || 
                      document.getElementById('department-filter').value === 'all') {
                    const nodeDiv = document.createElement('div');
                    nodeDiv.className = 'chart-node';
                    nodeDiv.innerHTML = `<strong>${node.name}</strong> - ${node.title}`;
                    nodeDiv.onclick = () => showPositionDetails(node);
                    container.appendChild(nodeDiv);
                  }
                });
              }
              
              function updateChart() {
                // This would update the chart based on filters
                const companySize = document.getElementById('company-size').value;
                const department = document.getElementById('department-filter').value;
                
                console.log(`Updating chart for ${companySize} company, department: ${department}`);
                
                // In real implementation, this would fetch new data and reinitialize the chart
                const filteredData = {
                  nodes: orgData.nodes.filter(node => 
                    (department === 'all' || node.department === department)
                  )
                };
                
                initOrgChart(filteredData);
              }
              
              function showPositionDetails(node) {
                // This would show position details when clicked
                const detailsDiv = document.getElementById('position-details');
                detailsDiv.innerHTML = `
                  <h3>${node.name} - ${node.title}</h3>
                  <p><strong>Department:</strong> ${node.department}</p>
                  <p><strong>Level:</strong> ${node.level}</p>
                  <p><a href="/positions/${node.name.toLowerCase().replace(' ', '-')}">View Full Position Details</a></p>
                `;
              }
            });
          </script>
          EOF

      - name: Create n8n Workflow Example
        run: |
          mkdir -p n8n-automation/workflows
          cat << 'EOF' > n8n-automation/workflows/salary-data-updater.json
          {
            "name": "iGaming Salary Data Updater",
            "nodes": [
              {
                "parameters": {
                  "rule": {
                    "interval": [
                      {
                        "field": "weeks",
                        "weeks": 1
                      }
                    ]
                  }
                },
                "name": "Schedule Trigger",
                "type": "n8n-nodes-base.scheduleTrigger",
                "typeVersion": 1,
                "position": [
                  250,
                  300
                ]
              },
              {
                "parameters": {
                  "url": "https://api.linkedin.com/v2/jobs",
                  "options": {},
                  "authentication": "genericCredentialType",
                  "genericAuthType": "httpHeaderAuth",
                  "sendQuery": true,
                  "queryParameters": {
                    "parameters": [
                      {
                        "name": "keywords",
                        "value": "={{$json[\"position_title\"]}} igaming"
                      },
                      {
                        "name": "location",
                        "value": "={{$json[\"region\"]}}"
                      }
                    ]
                  }
                },
                "name": "Scrape LinkedIn Jobs",
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 1,
                "position": [
                  450,
                  300
                ]
              },
              {
                "parameters": {
                  "functionCode": "// Process the salary data from job listings\n// This is a placeholder for the actual processing logic\n\nconst jobs = $input.all()[0].json.elements || [];\n\n// Extract salary information\nlet salaries = jobs\n  .filter(job => job.salary && job.salary.amount)\n  .map(job => job.salary.amount);\n\n// Calculate average if we have data\nlet averageSalary = 0;\nif (salaries.length > 0) {\n  averageSalary = salaries.reduce((sum, salary) => sum + salary, 0) / salaries.length;\n}\n\n// Format the salary range (in real implementation this would be more sophisticated)\nconst minSalary = Math.floor(averageSalary * 0.8 / 1000) * 1000;\nconst maxSalary = Math.ceil(averageSalary * 1.2 / 1000) * 1000;\n\nconst formattedSalary = `$${minSalary.toLocaleString()} - $${maxSalary.toLocaleString()}`;\n\nreturn {\n  processedSalary: formattedSalary,\n  positionId: $input.all()[0].json.positionId,\n  region: $input.all()[0].json.region\n};"
                },
                "name": "Process Salary Data",
                "type": "n8n-nodes-base.function",
                "typeVersion": 1,
                "position": [
                  650,
                  300
                ]
              },
              {
                "parameters": {
                  "url": "=https://yourdomain.com/wp-json/wp/v2/positions/{{$json[\"positionId\"]}}",
                  "authentication": "genericCredentialType",
                  "genericAuthType": "httpBasicAuth",
                  "method": "PATCH",
                  "sendBody": true,
                  "specifyBody": "json",
                  "jsonBody": "{\n  \"meta\": {\n    \"salary_range_{{$json[\"region\"]}}\": \"{{$json[\"processedSalary\"]}}\"\n  }\n}"
                },
                "name": "Update WordPress",
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 1,
                "position": [
                  850,
                  300
                ]
              },
              {
                "parameters": {
                  "conditions": {
                    "boolean": [
                      {
                        "value1": "={{$json[\"success\"]}}",
                        "value2": true
                      }
                    ]
                  }
                },
                "name": "If Successful",
                "type": "n8n-nodes-base.if",
                "typeVersion": 1,
                "position": [
                  1050,
                  300
                ]
              },
              {
                "parameters": {
                  "subject": "Salary Data Updated Successfully",
                  "text": "=Position: {{$json[\"position_title\"]}}\nRegion: {{$json[\"region\"]}}\nNew Salary Range: {{$json[\"processedSalary\"]}}"
                },
                "name": "Send Success Email",
                "type": "n8n-nodes-base.emailSend",
                "typeVersion": 1,
                "position": [
                  1250,
                  200
                ]
              },
              {
                "parameters": {
                  "subject": "Salary Update Failed",
                  "text": "=Position: {{$json[\"position_title\"]}}\nRegion: {{$json[\"region\"]}}\nError: {{$json[\"error\"]}}"
                },
                "name": "Send Error Email",
                "type": "n8n-nodes-base.emailSend",
                "typeVersion": 1,
                "position": [
                  1250,
                  400
                ]
              }
            ],
            "connections": {
              "Schedule Trigger": {
                "main": [
                  [
                    {
                      "node": "Scrape LinkedIn Jobs",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Scrape LinkedIn Jobs": {
                "main": [
                  [
                    {
                      "node": "Process Salary Data",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Process Salary Data": {
                "main": [
                  [
                    {
                      "node": "Update WordPress",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Update WordPress": {
                "main": [
                  [
                    {
                      "node": "If Successful",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "If Successful": {
                "main": [
                  [
                    {
                      "node": "Send Success Email",
                      "type": "main",
                      "index": 0
                    }
                  ],
                  [
                    {
                      "node": "Send Error Email",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            }
          }
          EOF

      - name: Create SEO Optimization Example
        run: |
          mkdir -p seo-optimization/rankmath-configs/schema-templates
          cat << 'EOF' > seo-optimization/rankmath-configs/schema-templates/position-schema.json
          {
            "@context": "https://schema.org/",
            "@type": "JobPosting",
            "title": "%position_title%",
            "description": "%position_description%",
            "datePosted": "%publish_date%",
            "validThrough": "%valid_through%",
            "employmentType": "FULL_TIME",
            "hiringOrganization": {
              "@type": "Organization",
              "name": "iGaming Organization Hub",
              "sameAs": "https://www.igaminghub.com"
            },
            "jobLocation": {
              "@type": "Place",
              "address": {
                "@type": "PostalAddress",
                "addressCountry": "%country%"
              }
            },
            "baseSalary": {
              "@type": "MonetaryAmount",
              "currency": "USD",
              "value": {
                "@type": "QuantitativeValue",
                "minValue": "%salary_min%",
                "maxValue": "%salary_max%",
                "unitText": "YEAR"
              }
            },
            "skills": "%skills%",
            "industry": "iGaming",
            "occupationalCategory": "Gaming Industry"
          }
          EOF

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Create initial project structure"
          git push
